import{K,h as I,aA as Ne,c as me,a as ne,b as He,l as J,Y as Xe,H as Ke,I as Je,J as ye,L as G,f as W,ak as Ge,aN as Ye,d as oe,s as Qe,bh as ie,bi as ae,e as F,bj as Me,aF as We,aS as Ze,Q as et,a7 as ke,aj as Ee,G as we,p as Be,bk as ue,O as tt,ar as be,bl as nt,bm as ot,ax as st,bn as rt,aE as it,bo as at,$ as Le,bp as ct,E as lt,bq as ht,aM as ut,br as dt,bs as Ue,ad as ft,j as se,N as Oe,bt as _t,q as gt,be as pt,z as mt,B as wt,A as bt,x as Ie,y as vt,m as X,ae as St,v as Ct,af as yt,bf as kt}from"./Clrz2Uix.js";import"./DsnmJJEf.js";import{i as Et}from"./DUamx-3m.js";import{a as Te}from"./C2cscdS4.js";import{l as Pe,p as j}from"./BxzNMlRZ.js";function It(s,e){return e}function Tt(s,e,t){for(var n=s.items,o=[],r=e.length,i=0;i<r;i++)rt(e[i].e,o,!0);var c=r>0&&o.length===0&&t!==null;if(c){var l=t.parentNode;it(l),l.append(t),n.clear(),M(s,e[0].prev,e[r-1].next)}at(o,()=>{for(var h=0;h<r;h++){var u=e[h];c||(n.delete(u.k),M(s,u.prev,u.next)),be(u.e,!c)}})}function Pt(s,e,t,n,o,r=null){var i=s,c={flags:e,items:new Map,first:null},l=(e&Me)!==0;if(l){var h=s;i=I?K(Ne(h)):h.appendChild(me())}I&&ne();var u=null,g=!1,b=new Map,x=Xe(()=>{var C=t();return Ze(C)?C:C==null?[]:We(C)}),d,m;function p(){Rt(m,d,c,b,i,o,e,n,t),r!==null&&(d.length===0?u?we(u):u=oe(()=>r(i)):u!==null&&Be(u,()=>{u=null}))}He(()=>{m??=Le,d=J(x);var C=d.length;if(g&&C===0)return;g=C===0;let T=!1;if(I){var D=Ke(i)===Je;D!==(C===0)&&(i=ye(),K(i),G(!1),T=!0)}if(I){for(var A=null,E,_=0;_<C;_++){if(W.nodeType===Ge&&W.data===Ye){i=W,T=!0,G(!1);break}var w=d[_],R=n(w,_);E=pe(W,c,A,null,w,R,_,o,e,t),c.items.set(R,E),A=E}C>0&&K(ye())}if(I)C===0&&r&&(u=oe(()=>r(i)));else if(Qe()){var z=new Set,Z=F;for(_=0;_<C;_+=1){w=d[_],R=n(w,_);var B=c.items.get(R)??b.get(R);B?(e&(ie|ae))!==0&&je(B,w,_,e):(E=pe(null,c,null,null,w,R,_,o,e,t,!0),b.set(R,E)),z.add(R)}for(const[H,ee]of c.items)z.has(H)||Z.skipped_effects.add(ee.e);Z.add_callback(p)}else p();T&&G(!0),J(x)}),I&&(i=W)}function Rt(s,e,t,n,o,r,i,c,l){var h=(i&ot)!==0,u=(i&(ie|ae))!==0,g=e.length,b=t.items,x=t.first,d=x,m,p=null,C,T=[],D=[],A,E,_,w;if(h)for(w=0;w<g;w+=1)A=e[w],E=c(A,w),_=b.get(E),_!==void 0&&(_.a?.measure(),(C??=new Set).add(_));for(w=0;w<g;w+=1){if(A=e[w],E=c(A,w),_=b.get(E),_===void 0){var R=n.get(E);if(R!==void 0){n.delete(E),b.set(E,R);var z=p?p.next:d;M(t,p,R),M(t,R,z),de(R,z,o),p=R}else{var Z=d?d.e.nodes_start:o;p=pe(Z,t,p,p===null?t.first:p.next,A,E,w,r,i,l)}b.set(E,p),T=[],D=[],d=p.next;continue}if(u&&je(_,A,w,i),(_.e.f&ue)!==0&&(we(_.e),h&&(_.a?.unfix(),(C??=new Set).delete(_))),_!==d){if(m!==void 0&&m.has(_)){if(T.length<D.length){var B=D[0],H;p=B.prev;var ee=T[0],le=T[T.length-1];for(H=0;H<T.length;H+=1)de(T[H],B,o);for(H=0;H<D.length;H+=1)m.delete(D[H]);M(t,ee.prev,le.next),M(t,p,ee),M(t,le,B),d=B,p=le,w-=1,T=[],D=[]}else m.delete(_),de(_,d,o),M(t,_.prev,_.next),M(t,_,p===null?t.first:p.next),M(t,p,_),p=_;continue}for(T=[],D=[];d!==null&&d.k!==E;)(d.e.f&ue)===0&&(m??=new Set).add(d),D.push(d),d=d.next;if(d===null)continue;_=d}T.push(_),p=_,d=_.next}if(d!==null||m!==void 0){for(var V=m===void 0?[]:We(m);d!==null;)(d.e.f&ue)===0&&V.push(d),d=d.next;var he=V.length;if(he>0){var ze=(i&Me)!==0&&g===0?o:null;if(h){for(w=0;w<he;w+=1)V[w].a?.measure();for(w=0;w<he;w+=1)V[w].a?.fix()}Tt(t,V,ze)}}h&&tt(()=>{if(C!==void 0)for(_ of C)_.a?.apply()}),s.first=t.first&&t.first.e,s.last=p&&p.e;for(var Ve of n.values())be(Ve.e);n.clear()}function je(s,e,t,n){(n&ie)!==0&&Ee(s.v,e),(n&ae)!==0?Ee(s.i,t):s.i=t}function pe(s,e,t,n,o,r,i,c,l,h,u){var g=(l&ie)!==0,b=(l&nt)===0,x=g?b?et(o,!1,!1):ke(o):o,d=(l&ae)===0?i:ke(i),m={i:d,v:x,k:r,a:null,e:null,prev:t,next:n};try{if(s===null){var p=document.createDocumentFragment();p.append(s=me())}return m.e=oe(()=>c(s,x,d,h),I),m.e.prev=t&&t.e,m.e.next=n&&n.e,t===null?u||(e.first=m):(t.next=m,t.e.next=m.e),n!==null&&(n.prev=m,n.e.prev=m.e),m}finally{}}function de(s,e,t){for(var n=s.next?s.next.e.nodes_start:t,o=e?e.e.nodes_start:t,r=s.e.nodes_start;r!==null&&r!==n;){var i=st(r);o.before(r),r=i}}function M(s,e,t){e===null?s.first=t:(e.next=t,e.e.next=t&&t.e),t!==null&&(t.prev=e,t.e.prev=e&&e.e)}function Dt(s,e,t,n,o){I&&ne();var r=e.$$slots?.[t],i=!1;r===!0&&(r=e.children,i=!0),r===void 0||r(s,i?()=>n:n)}function $t(s,e,t,n,o,r){let i=I;I&&ne();var c,l,h=null;I&&W.nodeType===ct&&(h=W,ne());var u=I?W:s,g;He(()=>{const b=e()||null;var x=ht;b!==c&&(g&&(b===null?Be(g,()=>{g=null,l=null}):b===l?we(g):be(g)),b&&b!==l&&(g=oe(()=>{if(h=I?h:document.createElementNS(x,b),ut(h,h),n){I&&dt(b)&&h.append(document.createComment(""));var d=I?Ne(h):h.appendChild(me());I&&(d===null?G(!1):K(d)),n(h,d)}Le.nodes_end=h,u.before(h)})),c=b,c&&(l=c))},lt),i&&(G(!0),K(u))}function Sn(s,e,t=e){var n=new WeakSet;Ue(s,"input",async o=>{var r=o?s.defaultValue:s.value;if(r=fe(s)?_e(r):r,t(r),F!==null&&n.add(F),await ft(),r!==(r=e())){var i=s.selectionStart,c=s.selectionEnd,l=s.value.length;if(s.value=r??"",c!==null){var h=s.value.length;i===c&&c===l&&h>l?(s.selectionStart=h,s.selectionEnd=h):(s.selectionStart=i,s.selectionEnd=Math.min(c,h))}}}),(I&&s.defaultValue!==s.value||se(e)==null&&s.value)&&(t(fe(s)?_e(s.value):s.value),F!==null&&n.add(F)),Oe(()=>{var o=e();if(s===document.activeElement){var r=_t??F;if(n.has(r))return}fe(s)&&o===_e(s.value)||s.type==="date"&&!o&&!s.value||o!==s.value&&(s.value=o??"")})}function Cn(s,e,t=e){Ue(s,"change",n=>{var o=n?s.defaultChecked:s.checked;t(o)}),(I&&s.defaultChecked!==s.checked||se(e)==null)&&t(s.checked),Oe(()=>{var n=e();s.checked=!!n})}function fe(s){var e=s.type;return e==="number"||e==="range"}function _e(s){return s===""?null:+s}class L extends Error{constructor(e,t){const n=new.target.prototype;super(`${e}: Status code '${t}'`),this.statusCode=t,this.__proto__=n}}class ve extends Error{constructor(e="A timeout occurred."){const t=new.target.prototype;super(e),this.__proto__=t}}class N extends Error{constructor(e="An abort occurred."){const t=new.target.prototype;super(e),this.__proto__=t}}class xt extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.transport=t,this.errorType="UnsupportedTransportError",this.__proto__=n}}class At extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.transport=t,this.errorType="DisabledTransportError",this.__proto__=n}}class Nt extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.transport=t,this.errorType="FailedToStartTransportError",this.__proto__=n}}class Re extends Error{constructor(e){const t=new.target.prototype;super(e),this.errorType="FailedToNegotiateWithServerError",this.__proto__=t}}class Ht extends Error{constructor(e,t){const n=new.target.prototype;super(e),this.innerErrors=t,this.__proto__=n}}class Fe{constructor(e,t,n){this.statusCode=e,this.statusText=t,this.content=n}}class ce{get(e,t){return this.send({...t,method:"GET",url:e})}post(e,t){return this.send({...t,method:"POST",url:e})}delete(e,t){return this.send({...t,method:"DELETE",url:e})}getCookieString(e){return""}}var a;(function(s){s[s.Trace=0]="Trace",s[s.Debug=1]="Debug",s[s.Information=2]="Information",s[s.Warning=3]="Warning",s[s.Error=4]="Error",s[s.Critical=5]="Critical",s[s.None=6]="None"})(a||(a={}));class Y{constructor(){}log(e,t){}}Y.instance=new Y;const Mt="9.0.6";class y{static isRequired(e,t){if(e==null)throw new Error(`The '${t}' argument is required.`)}static isNotEmpty(e,t){if(!e||e.match(/^\s*$/))throw new Error(`The '${t}' argument should not be empty.`)}static isIn(e,t,n){if(!(e in t))throw new Error(`Unknown ${n} value: ${e}.`)}}class S{static get isBrowser(){return!S.isNode&&typeof window=="object"&&typeof window.document=="object"}static get isWebWorker(){return!S.isNode&&typeof self=="object"&&"importScripts"in self}static get isReactNative(){return!S.isNode&&typeof window=="object"&&typeof window.document>"u"}static get isNode(){return typeof process<"u"&&process.release&&process.release.name==="node"}}function Q(s,e){let t="";return O(s)?(t=`Binary data of length ${s.byteLength}`,e&&(t+=`. Content: '${Wt(s)}'`)):typeof s=="string"&&(t=`String data of length ${s.length}`,e&&(t+=`. Content: '${s}'`)),t}function Wt(s){const e=new Uint8Array(s);let t="";return e.forEach(n=>{const o=n<16?"0":"";t+=`0x${o}${n.toString(16)} `}),t.substr(0,t.length-1)}function O(s){return s&&typeof ArrayBuffer<"u"&&(s instanceof ArrayBuffer||s.constructor&&s.constructor.name==="ArrayBuffer")}async function qe(s,e,t,n,o,r){const i={},[c,l]=q();i[c]=l,s.log(a.Trace,`(${e} transport) sending data. ${Q(o,r.logMessageContent)}.`);const h=O(o)?"arraybuffer":"text",u=await t.post(n,{content:o,headers:{...i,...r.headers},responseType:h,timeout:r.timeout,withCredentials:r.withCredentials});s.log(a.Trace,`(${e} transport) request complete. Response status: ${u.statusCode}.`)}function Bt(s){return s===void 0?new re(a.Information):s===null?Y.instance:s.log!==void 0?s:new re(s)}class Lt{constructor(e,t){this._subject=e,this._observer=t}dispose(){const e=this._subject.observers.indexOf(this._observer);e>-1&&this._subject.observers.splice(e,1),this._subject.observers.length===0&&this._subject.cancelCallback&&this._subject.cancelCallback().catch(t=>{})}}class re{constructor(e){this._minLevel=e,this.out=console}log(e,t){if(e>=this._minLevel){const n=`[${new Date().toISOString()}] ${a[e]}: ${t}`;switch(e){case a.Critical:case a.Error:this.out.error(n);break;case a.Warning:this.out.warn(n);break;case a.Information:this.out.info(n);break;default:this.out.log(n);break}}}}function q(){let s="X-SignalR-User-Agent";return S.isNode&&(s="User-Agent"),[s,Ut(Mt,Ot(),Ft(),jt())]}function Ut(s,e,t,n){let o="Microsoft SignalR/";const r=s.split(".");return o+=`${r[0]}.${r[1]}`,o+=` (${s}; `,e&&e!==""?o+=`${e}; `:o+="Unknown OS; ",o+=`${t}`,n?o+=`; ${n}`:o+="; Unknown Runtime Version",o+=")",o}function Ot(){if(S.isNode)switch(process.platform){case"win32":return"Windows NT";case"darwin":return"macOS";case"linux":return"Linux";default:return process.platform}else return""}function jt(){if(S.isNode)return process.versions.node}function Ft(){return S.isNode?"NodeJS":"Browser"}function ge(s){return s.stack?s.stack:s.message?s.message:`${s}`}function qt(){if(typeof globalThis<"u")return globalThis;if(typeof self<"u")return self;if(typeof window<"u")return window;if(typeof global<"u")return global;throw new Error("could not find global")}class zt extends ce{constructor(e){if(super(),this._logger=e,typeof fetch>"u"||S.isNode){const t=typeof __webpack_require__=="function"?__non_webpack_require__:require;this._jar=new(t("tough-cookie")).CookieJar,typeof fetch>"u"?this._fetchType=t("node-fetch"):this._fetchType=fetch,this._fetchType=t("fetch-cookie")(this._fetchType,this._jar)}else this._fetchType=fetch.bind(qt());if(typeof AbortController>"u"){const t=typeof __webpack_require__=="function"?__non_webpack_require__:require;this._abortControllerType=t("abort-controller")}else this._abortControllerType=AbortController}async send(e){if(e.abortSignal&&e.abortSignal.aborted)throw new N;if(!e.method)throw new Error("No method defined.");if(!e.url)throw new Error("No url defined.");const t=new this._abortControllerType;let n;e.abortSignal&&(e.abortSignal.onabort=()=>{t.abort(),n=new N});let o=null;if(e.timeout){const l=e.timeout;o=setTimeout(()=>{t.abort(),this._logger.log(a.Warning,"Timeout from HTTP request."),n=new ve},l)}e.content===""&&(e.content=void 0),e.content&&(e.headers=e.headers||{},O(e.content)?e.headers["Content-Type"]="application/octet-stream":e.headers["Content-Type"]="text/plain;charset=UTF-8");let r;try{r=await this._fetchType(e.url,{body:e.content,cache:"no-cache",credentials:e.withCredentials===!0?"include":"same-origin",headers:{"X-Requested-With":"XMLHttpRequest",...e.headers},method:e.method,mode:"cors",redirect:"follow",signal:t.signal})}catch(l){throw n||(this._logger.log(a.Warning,`Error from HTTP request. ${l}.`),l)}finally{o&&clearTimeout(o),e.abortSignal&&(e.abortSignal.onabort=null)}if(!r.ok){const l=await De(r,"text");throw new L(l||r.statusText,r.status)}const c=await De(r,e.responseType);return new Fe(r.status,r.statusText,c)}getCookieString(e){let t="";return S.isNode&&this._jar&&this._jar.getCookies(e,(n,o)=>t=o.join("; ")),t}}function De(s,e){let t;switch(e){case"arraybuffer":t=s.arrayBuffer();break;case"text":t=s.text();break;case"blob":case"document":case"json":throw new Error(`${e} is not supported.`);default:t=s.text();break}return t}class Vt extends ce{constructor(e){super(),this._logger=e}send(e){return e.abortSignal&&e.abortSignal.aborted?Promise.reject(new N):e.method?e.url?new Promise((t,n)=>{const o=new XMLHttpRequest;o.open(e.method,e.url,!0),o.withCredentials=e.withCredentials===void 0?!0:e.withCredentials,o.setRequestHeader("X-Requested-With","XMLHttpRequest"),e.content===""&&(e.content=void 0),e.content&&(O(e.content)?o.setRequestHeader("Content-Type","application/octet-stream"):o.setRequestHeader("Content-Type","text/plain;charset=UTF-8"));const r=e.headers;r&&Object.keys(r).forEach(i=>{o.setRequestHeader(i,r[i])}),e.responseType&&(o.responseType=e.responseType),e.abortSignal&&(e.abortSignal.onabort=()=>{o.abort(),n(new N)}),e.timeout&&(o.timeout=e.timeout),o.onload=()=>{e.abortSignal&&(e.abortSignal.onabort=null),o.status>=200&&o.status<300?t(new Fe(o.status,o.statusText,o.response||o.responseText)):n(new L(o.response||o.responseText||o.statusText,o.status))},o.onerror=()=>{this._logger.log(a.Warning,`Error from HTTP request. ${o.status}: ${o.statusText}.`),n(new L(o.statusText,o.status))},o.ontimeout=()=>{this._logger.log(a.Warning,"Timeout from HTTP request."),n(new ve)},o.send(e.content)}):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}}class Xt extends ce{constructor(e){if(super(),typeof fetch<"u"||S.isNode)this._httpClient=new zt(e);else if(typeof XMLHttpRequest<"u")this._httpClient=new Vt(e);else throw new Error("No usable HttpClient found.")}send(e){return e.abortSignal&&e.abortSignal.aborted?Promise.reject(new N):e.method?e.url?this._httpClient.send(e):Promise.reject(new Error("No url defined.")):Promise.reject(new Error("No method defined."))}getCookieString(e){return this._httpClient.getCookieString(e)}}class ${static write(e){return`${e}${$.RecordSeparator}`}static parse(e){if(e[e.length-1]!==$.RecordSeparator)throw new Error("Message is incomplete.");const t=e.split($.RecordSeparator);return t.pop(),t}}$.RecordSeparatorCode=30;$.RecordSeparator=String.fromCharCode($.RecordSeparatorCode);class Kt{writeHandshakeRequest(e){return $.write(JSON.stringify(e))}parseHandshakeResponse(e){let t,n;if(O(e)){const c=new Uint8Array(e),l=c.indexOf($.RecordSeparatorCode);if(l===-1)throw new Error("Message is incomplete.");const h=l+1;t=String.fromCharCode.apply(null,Array.prototype.slice.call(c.slice(0,h))),n=c.byteLength>h?c.slice(h).buffer:null}else{const c=e,l=c.indexOf($.RecordSeparator);if(l===-1)throw new Error("Message is incomplete.");const h=l+1;t=c.substring(0,h),n=c.length>h?c.substring(h):null}const o=$.parse(t),r=JSON.parse(o[0]);if(r.type)throw new Error("Expected a handshake response from the server.");return[n,r]}}var f;(function(s){s[s.Invocation=1]="Invocation",s[s.StreamItem=2]="StreamItem",s[s.Completion=3]="Completion",s[s.StreamInvocation=4]="StreamInvocation",s[s.CancelInvocation=5]="CancelInvocation",s[s.Ping=6]="Ping",s[s.Close=7]="Close",s[s.Ack=8]="Ack",s[s.Sequence=9]="Sequence"})(f||(f={}));class Jt{constructor(){this.observers=[]}next(e){for(const t of this.observers)t.next(e)}error(e){for(const t of this.observers)t.error&&t.error(e)}complete(){for(const e of this.observers)e.complete&&e.complete()}subscribe(e){return this.observers.push(e),new Lt(this,e)}}class Gt{constructor(e,t,n){this._bufferSize=1e5,this._messages=[],this._totalMessageCount=0,this._waitForSequenceMessage=!1,this._nextReceivingSequenceId=1,this._latestReceivedSequenceId=0,this._bufferedByteCount=0,this._reconnectInProgress=!1,this._protocol=e,this._connection=t,this._bufferSize=n}async _send(e){const t=this._protocol.writeMessage(e);let n=Promise.resolve();if(this._isInvocationMessage(e)){this._totalMessageCount++;let o=()=>{},r=()=>{};O(t)?this._bufferedByteCount+=t.byteLength:this._bufferedByteCount+=t.length,this._bufferedByteCount>=this._bufferSize&&(n=new Promise((i,c)=>{o=i,r=c})),this._messages.push(new Yt(t,this._totalMessageCount,o,r))}try{this._reconnectInProgress||await this._connection.send(t)}catch{this._disconnected()}await n}_ack(e){let t=-1;for(let n=0;n<this._messages.length;n++){const o=this._messages[n];if(o._id<=e.sequenceId)t=n,O(o._message)?this._bufferedByteCount-=o._message.byteLength:this._bufferedByteCount-=o._message.length,o._resolver();else if(this._bufferedByteCount<this._bufferSize)o._resolver();else break}t!==-1&&(this._messages=this._messages.slice(t+1))}_shouldProcessMessage(e){if(this._waitForSequenceMessage)return e.type!==f.Sequence?!1:(this._waitForSequenceMessage=!1,!0);if(!this._isInvocationMessage(e))return!0;const t=this._nextReceivingSequenceId;return this._nextReceivingSequenceId++,t<=this._latestReceivedSequenceId?(t===this._latestReceivedSequenceId&&this._ackTimer(),!1):(this._latestReceivedSequenceId=t,this._ackTimer(),!0)}_resetSequence(e){if(e.sequenceId>this._nextReceivingSequenceId){this._connection.stop(new Error("Sequence ID greater than amount of messages we've received."));return}this._nextReceivingSequenceId=e.sequenceId}_disconnected(){this._reconnectInProgress=!0,this._waitForSequenceMessage=!0}async _resend(){const e=this._messages.length!==0?this._messages[0]._id:this._totalMessageCount+1;await this._connection.send(this._protocol.writeMessage({type:f.Sequence,sequenceId:e}));const t=this._messages;for(const n of t)await this._connection.send(n._message);this._reconnectInProgress=!1}_dispose(e){e??(e=new Error("Unable to reconnect to server."));for(const t of this._messages)t._rejector(e)}_isInvocationMessage(e){switch(e.type){case f.Invocation:case f.StreamItem:case f.Completion:case f.StreamInvocation:case f.CancelInvocation:return!0;case f.Close:case f.Sequence:case f.Ping:case f.Ack:return!1}}_ackTimer(){this._ackTimerHandle===void 0&&(this._ackTimerHandle=setTimeout(async()=>{try{this._reconnectInProgress||await this._connection.send(this._protocol.writeMessage({type:f.Ack,sequenceId:this._latestReceivedSequenceId}))}catch{}clearTimeout(this._ackTimerHandle),this._ackTimerHandle=void 0},1e3))}}class Yt{constructor(e,t,n,o){this._message=e,this._id=t,this._resolver=n,this._rejector=o}}const Qt=30*1e3,Zt=15*1e3,en=1e5;var v;(function(s){s.Disconnected="Disconnected",s.Connecting="Connecting",s.Connected="Connected",s.Disconnecting="Disconnecting",s.Reconnecting="Reconnecting"})(v||(v={}));class Se{static create(e,t,n,o,r,i,c){return new Se(e,t,n,o,r,i,c)}constructor(e,t,n,o,r,i,c){this._nextKeepAlive=0,this._freezeEventListener=()=>{this._logger.log(a.Warning,"The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://learn.microsoft.com/aspnet/core/signalr/javascript-client#bsleep")},y.isRequired(e,"connection"),y.isRequired(t,"logger"),y.isRequired(n,"protocol"),this.serverTimeoutInMilliseconds=r??Qt,this.keepAliveIntervalInMilliseconds=i??Zt,this._statefulReconnectBufferSize=c??en,this._logger=t,this._protocol=n,this.connection=e,this._reconnectPolicy=o,this._handshakeProtocol=new Kt,this.connection.onreceive=l=>this._processIncomingData(l),this.connection.onclose=l=>this._connectionClosed(l),this._callbacks={},this._methods={},this._closedCallbacks=[],this._reconnectingCallbacks=[],this._reconnectedCallbacks=[],this._invocationId=0,this._receivedHandshakeResponse=!1,this._connectionState=v.Disconnected,this._connectionStarted=!1,this._cachedPingMessage=this._protocol.writeMessage({type:f.Ping})}get state(){return this._connectionState}get connectionId(){return this.connection&&this.connection.connectionId||null}get baseUrl(){return this.connection.baseUrl||""}set baseUrl(e){if(this._connectionState!==v.Disconnected&&this._connectionState!==v.Reconnecting)throw new Error("The HubConnection must be in the Disconnected or Reconnecting state to change the url.");if(!e)throw new Error("The HubConnection url must be a valid url.");this.connection.baseUrl=e}start(){return this._startPromise=this._startWithStateTransitions(),this._startPromise}async _startWithStateTransitions(){if(this._connectionState!==v.Disconnected)return Promise.reject(new Error("Cannot start a HubConnection that is not in the 'Disconnected' state."));this._connectionState=v.Connecting,this._logger.log(a.Debug,"Starting HubConnection.");try{await this._startInternal(),S.isBrowser&&window.document.addEventListener("freeze",this._freezeEventListener),this._connectionState=v.Connected,this._connectionStarted=!0,this._logger.log(a.Debug,"HubConnection connected successfully.")}catch(e){return this._connectionState=v.Disconnected,this._logger.log(a.Debug,`HubConnection failed to start successfully because of error '${e}'.`),Promise.reject(e)}}async _startInternal(){this._stopDuringStartError=void 0,this._receivedHandshakeResponse=!1;const e=new Promise((t,n)=>{this._handshakeResolver=t,this._handshakeRejecter=n});await this.connection.start(this._protocol.transferFormat);try{let t=this._protocol.version;this.connection.features.reconnect||(t=1);const n={protocol:this._protocol.name,version:t};if(this._logger.log(a.Debug,"Sending handshake request."),await this._sendMessage(this._handshakeProtocol.writeHandshakeRequest(n)),this._logger.log(a.Information,`Using HubProtocol '${this._protocol.name}'.`),this._cleanupTimeout(),this._resetTimeoutPeriod(),this._resetKeepAliveInterval(),await e,this._stopDuringStartError)throw this._stopDuringStartError;(this.connection.features.reconnect||!1)&&(this._messageBuffer=new Gt(this._protocol,this.connection,this._statefulReconnectBufferSize),this.connection.features.disconnected=this._messageBuffer._disconnected.bind(this._messageBuffer),this.connection.features.resend=()=>{if(this._messageBuffer)return this._messageBuffer._resend()}),this.connection.features.inherentKeepAlive||await this._sendMessage(this._cachedPingMessage)}catch(t){throw this._logger.log(a.Debug,`Hub handshake failed with error '${t}' during start(). Stopping HubConnection.`),this._cleanupTimeout(),this._cleanupPingTimer(),await this.connection.stop(t),t}}async stop(){const e=this._startPromise;this.connection.features.reconnect=!1,this._stopPromise=this._stopInternal(),await this._stopPromise;try{await e}catch{}}_stopInternal(e){if(this._connectionState===v.Disconnected)return this._logger.log(a.Debug,`Call to HubConnection.stop(${e}) ignored because it is already in the disconnected state.`),Promise.resolve();if(this._connectionState===v.Disconnecting)return this._logger.log(a.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),this._stopPromise;const t=this._connectionState;return this._connectionState=v.Disconnecting,this._logger.log(a.Debug,"Stopping HubConnection."),this._reconnectDelayHandle?(this._logger.log(a.Debug,"Connection stopped during reconnect delay. Done reconnecting."),clearTimeout(this._reconnectDelayHandle),this._reconnectDelayHandle=void 0,this._completeClose(),Promise.resolve()):(t===v.Connected&&this._sendCloseMessage(),this._cleanupTimeout(),this._cleanupPingTimer(),this._stopDuringStartError=e||new N("The connection was stopped before the hub handshake could complete."),this.connection.stop(e))}async _sendCloseMessage(){try{await this._sendWithProtocol(this._createCloseMessage())}catch{}}stream(e,...t){const[n,o]=this._replaceStreamingParams(t),r=this._createStreamInvocation(e,t,o);let i;const c=new Jt;return c.cancelCallback=()=>{const l=this._createCancelInvocation(r.invocationId);return delete this._callbacks[r.invocationId],i.then(()=>this._sendWithProtocol(l))},this._callbacks[r.invocationId]=(l,h)=>{if(h){c.error(h);return}else l&&(l.type===f.Completion?l.error?c.error(new Error(l.error)):c.complete():c.next(l.item))},i=this._sendWithProtocol(r).catch(l=>{c.error(l),delete this._callbacks[r.invocationId]}),this._launchStreams(n,i),c}_sendMessage(e){return this._resetKeepAliveInterval(),this.connection.send(e)}_sendWithProtocol(e){return this._messageBuffer?this._messageBuffer._send(e):this._sendMessage(this._protocol.writeMessage(e))}send(e,...t){const[n,o]=this._replaceStreamingParams(t),r=this._sendWithProtocol(this._createInvocation(e,t,!0,o));return this._launchStreams(n,r),r}invoke(e,...t){const[n,o]=this._replaceStreamingParams(t),r=this._createInvocation(e,t,!1,o);return new Promise((c,l)=>{this._callbacks[r.invocationId]=(u,g)=>{if(g){l(g);return}else u&&(u.type===f.Completion?u.error?l(new Error(u.error)):c(u.result):l(new Error(`Unexpected message type: ${u.type}`)))};const h=this._sendWithProtocol(r).catch(u=>{l(u),delete this._callbacks[r.invocationId]});this._launchStreams(n,h)})}on(e,t){!e||!t||(e=e.toLowerCase(),this._methods[e]||(this._methods[e]=[]),this._methods[e].indexOf(t)===-1&&this._methods[e].push(t))}off(e,t){if(!e)return;e=e.toLowerCase();const n=this._methods[e];if(n)if(t){const o=n.indexOf(t);o!==-1&&(n.splice(o,1),n.length===0&&delete this._methods[e])}else delete this._methods[e]}onclose(e){e&&this._closedCallbacks.push(e)}onreconnecting(e){e&&this._reconnectingCallbacks.push(e)}onreconnected(e){e&&this._reconnectedCallbacks.push(e)}_processIncomingData(e){if(this._cleanupTimeout(),this._receivedHandshakeResponse||(e=this._processHandshakeResponse(e),this._receivedHandshakeResponse=!0),e){const t=this._protocol.parseMessages(e,this._logger);for(const n of t)if(!(this._messageBuffer&&!this._messageBuffer._shouldProcessMessage(n)))switch(n.type){case f.Invocation:this._invokeClientMethod(n).catch(o=>{this._logger.log(a.Error,`Invoke client method threw error: ${ge(o)}`)});break;case f.StreamItem:case f.Completion:{const o=this._callbacks[n.invocationId];if(o){n.type===f.Completion&&delete this._callbacks[n.invocationId];try{o(n)}catch(r){this._logger.log(a.Error,`Stream callback threw error: ${ge(r)}`)}}break}case f.Ping:break;case f.Close:{this._logger.log(a.Information,"Close message received from server.");const o=n.error?new Error("Server returned an error on close: "+n.error):void 0;n.allowReconnect===!0?this.connection.stop(o):this._stopPromise=this._stopInternal(o);break}case f.Ack:this._messageBuffer&&this._messageBuffer._ack(n);break;case f.Sequence:this._messageBuffer&&this._messageBuffer._resetSequence(n);break;default:this._logger.log(a.Warning,`Invalid message type: ${n.type}.`);break}}this._resetTimeoutPeriod()}_processHandshakeResponse(e){let t,n;try{[n,t]=this._handshakeProtocol.parseHandshakeResponse(e)}catch(o){const r="Error parsing handshake response: "+o;this._logger.log(a.Error,r);const i=new Error(r);throw this._handshakeRejecter(i),i}if(t.error){const o="Server returned handshake error: "+t.error;this._logger.log(a.Error,o);const r=new Error(o);throw this._handshakeRejecter(r),r}else this._logger.log(a.Debug,"Server handshake complete.");return this._handshakeResolver(),n}_resetKeepAliveInterval(){this.connection.features.inherentKeepAlive||(this._nextKeepAlive=new Date().getTime()+this.keepAliveIntervalInMilliseconds,this._cleanupPingTimer())}_resetTimeoutPeriod(){if((!this.connection.features||!this.connection.features.inherentKeepAlive)&&(this._timeoutHandle=setTimeout(()=>this.serverTimeout(),this.serverTimeoutInMilliseconds),this._pingServerHandle===void 0)){let e=this._nextKeepAlive-new Date().getTime();e<0&&(e=0),this._pingServerHandle=setTimeout(async()=>{if(this._connectionState===v.Connected)try{await this._sendMessage(this._cachedPingMessage)}catch{this._cleanupPingTimer()}},e)}}serverTimeout(){this.connection.stop(new Error("Server timeout elapsed without receiving a message from the server."))}async _invokeClientMethod(e){const t=e.target.toLowerCase(),n=this._methods[t];if(!n){this._logger.log(a.Warning,`No client method with the name '${t}' found.`),e.invocationId&&(this._logger.log(a.Warning,`No result given for '${t}' method and invocation ID '${e.invocationId}'.`),await this._sendWithProtocol(this._createCompletionMessage(e.invocationId,"Client didn't provide a result.",null)));return}const o=n.slice(),r=!!e.invocationId;let i,c,l;for(const h of o)try{const u=i;i=await h.apply(this,e.arguments),r&&i&&u&&(this._logger.log(a.Error,`Multiple results provided for '${t}'. Sending error to server.`),l=this._createCompletionMessage(e.invocationId,"Client provided multiple results.",null)),c=void 0}catch(u){c=u,this._logger.log(a.Error,`A callback for the method '${t}' threw error '${u}'.`)}l?await this._sendWithProtocol(l):r?(c?l=this._createCompletionMessage(e.invocationId,`${c}`,null):i!==void 0?l=this._createCompletionMessage(e.invocationId,null,i):(this._logger.log(a.Warning,`No result given for '${t}' method and invocation ID '${e.invocationId}'.`),l=this._createCompletionMessage(e.invocationId,"Client didn't provide a result.",null)),await this._sendWithProtocol(l)):i&&this._logger.log(a.Error,`Result given for '${t}' method but server is not expecting a result.`)}_connectionClosed(e){this._logger.log(a.Debug,`HubConnection.connectionClosed(${e}) called while in state ${this._connectionState}.`),this._stopDuringStartError=this._stopDuringStartError||e||new N("The underlying connection was closed before the hub handshake could complete."),this._handshakeResolver&&this._handshakeResolver(),this._cancelCallbacksWithError(e||new Error("Invocation canceled due to the underlying connection being closed.")),this._cleanupTimeout(),this._cleanupPingTimer(),this._connectionState===v.Disconnecting?this._completeClose(e):this._connectionState===v.Connected&&this._reconnectPolicy?this._reconnect(e):this._connectionState===v.Connected&&this._completeClose(e)}_completeClose(e){if(this._connectionStarted){this._connectionState=v.Disconnected,this._connectionStarted=!1,this._messageBuffer&&(this._messageBuffer._dispose(e??new Error("Connection closed.")),this._messageBuffer=void 0),S.isBrowser&&window.document.removeEventListener("freeze",this._freezeEventListener);try{this._closedCallbacks.forEach(t=>t.apply(this,[e]))}catch(t){this._logger.log(a.Error,`An onclose callback called with error '${e}' threw error '${t}'.`)}}}async _reconnect(e){const t=Date.now();let n=0,o=e!==void 0?e:new Error("Attempting to reconnect due to a unknown error."),r=this._getNextRetryDelay(n++,0,o);if(r===null){this._logger.log(a.Debug,"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt."),this._completeClose(e);return}if(this._connectionState=v.Reconnecting,e?this._logger.log(a.Information,`Connection reconnecting because of error '${e}'.`):this._logger.log(a.Information,"Connection reconnecting."),this._reconnectingCallbacks.length!==0){try{this._reconnectingCallbacks.forEach(i=>i.apply(this,[e]))}catch(i){this._logger.log(a.Error,`An onreconnecting callback called with error '${e}' threw error '${i}'.`)}if(this._connectionState!==v.Reconnecting){this._logger.log(a.Debug,"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.");return}}for(;r!==null;){if(this._logger.log(a.Information,`Reconnect attempt number ${n} will start in ${r} ms.`),await new Promise(i=>{this._reconnectDelayHandle=setTimeout(i,r)}),this._reconnectDelayHandle=void 0,this._connectionState!==v.Reconnecting){this._logger.log(a.Debug,"Connection left the reconnecting state during reconnect delay. Done reconnecting.");return}try{if(await this._startInternal(),this._connectionState=v.Connected,this._logger.log(a.Information,"HubConnection reconnected successfully."),this._reconnectedCallbacks.length!==0)try{this._reconnectedCallbacks.forEach(i=>i.apply(this,[this.connection.connectionId]))}catch(i){this._logger.log(a.Error,`An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${i}'.`)}return}catch(i){if(this._logger.log(a.Information,`Reconnect attempt failed because of error '${i}'.`),this._connectionState!==v.Reconnecting){this._logger.log(a.Debug,`Connection moved to the '${this._connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`),this._connectionState===v.Disconnecting&&this._completeClose();return}o=i instanceof Error?i:new Error(i.toString()),r=this._getNextRetryDelay(n++,Date.now()-t,o)}}this._logger.log(a.Information,`Reconnect retries have been exhausted after ${Date.now()-t} ms and ${n} failed attempts. Connection disconnecting.`),this._completeClose()}_getNextRetryDelay(e,t,n){try{return this._reconnectPolicy.nextRetryDelayInMilliseconds({elapsedMilliseconds:t,previousRetryCount:e,retryReason:n})}catch(o){return this._logger.log(a.Error,`IRetryPolicy.nextRetryDelayInMilliseconds(${e}, ${t}) threw error '${o}'.`),null}}_cancelCallbacksWithError(e){const t=this._callbacks;this._callbacks={},Object.keys(t).forEach(n=>{const o=t[n];try{o(null,e)}catch(r){this._logger.log(a.Error,`Stream 'error' callback called with '${e}' threw error: ${ge(r)}`)}})}_cleanupPingTimer(){this._pingServerHandle&&(clearTimeout(this._pingServerHandle),this._pingServerHandle=void 0)}_cleanupTimeout(){this._timeoutHandle&&clearTimeout(this._timeoutHandle)}_createInvocation(e,t,n,o){if(n)return o.length!==0?{target:e,arguments:t,streamIds:o,type:f.Invocation}:{target:e,arguments:t,type:f.Invocation};{const r=this._invocationId;return this._invocationId++,o.length!==0?{target:e,arguments:t,invocationId:r.toString(),streamIds:o,type:f.Invocation}:{target:e,arguments:t,invocationId:r.toString(),type:f.Invocation}}}_launchStreams(e,t){if(e.length!==0){t||(t=Promise.resolve());for(const n in e)e[n].subscribe({complete:()=>{t=t.then(()=>this._sendWithProtocol(this._createCompletionMessage(n)))},error:o=>{let r;o instanceof Error?r=o.message:o&&o.toString?r=o.toString():r="Unknown error",t=t.then(()=>this._sendWithProtocol(this._createCompletionMessage(n,r)))},next:o=>{t=t.then(()=>this._sendWithProtocol(this._createStreamItemMessage(n,o)))}})}}_replaceStreamingParams(e){const t=[],n=[];for(let o=0;o<e.length;o++){const r=e[o];if(this._isObservable(r)){const i=this._invocationId;this._invocationId++,t[i]=r,n.push(i.toString()),e.splice(o,1)}}return[t,n]}_isObservable(e){return e&&e.subscribe&&typeof e.subscribe=="function"}_createStreamInvocation(e,t,n){const o=this._invocationId;return this._invocationId++,n.length!==0?{target:e,arguments:t,invocationId:o.toString(),streamIds:n,type:f.StreamInvocation}:{target:e,arguments:t,invocationId:o.toString(),type:f.StreamInvocation}}_createCancelInvocation(e){return{invocationId:e,type:f.CancelInvocation}}_createStreamItemMessage(e,t){return{invocationId:e,item:t,type:f.StreamItem}}_createCompletionMessage(e,t,n){return t?{error:t,invocationId:e,type:f.Completion}:{invocationId:e,result:n,type:f.Completion}}_createCloseMessage(){return{type:f.Close}}}const tn=[0,2e3,1e4,3e4,null];class $e{constructor(e){this._retryDelays=e!==void 0?[...e,null]:tn}nextRetryDelayInMilliseconds(e){return this._retryDelays[e.previousRetryCount]}}class U{}U.Authorization="Authorization";U.Cookie="Cookie";class nn extends ce{constructor(e,t){super(),this._innerClient=e,this._accessTokenFactory=t}async send(e){let t=!0;this._accessTokenFactory&&(!this._accessToken||e.url&&e.url.indexOf("/negotiate?")>0)&&(t=!1,this._accessToken=await this._accessTokenFactory()),this._setAuthorizationHeader(e);const n=await this._innerClient.send(e);return t&&n.statusCode===401&&this._accessTokenFactory?(this._accessToken=await this._accessTokenFactory(),this._setAuthorizationHeader(e),await this._innerClient.send(e)):n}_setAuthorizationHeader(e){e.headers||(e.headers={}),this._accessToken?e.headers[U.Authorization]=`Bearer ${this._accessToken}`:this._accessTokenFactory&&e.headers[U.Authorization]&&delete e.headers[U.Authorization]}getCookieString(e){return this._innerClient.getCookieString(e)}}var k;(function(s){s[s.None=0]="None",s[s.WebSockets=1]="WebSockets",s[s.ServerSentEvents=2]="ServerSentEvents",s[s.LongPolling=4]="LongPolling"})(k||(k={}));var P;(function(s){s[s.Text=1]="Text",s[s.Binary=2]="Binary"})(P||(P={}));let on=class{constructor(){this._isAborted=!1,this.onabort=null}abort(){this._isAborted||(this._isAborted=!0,this.onabort&&this.onabort())}get signal(){return this}get aborted(){return this._isAborted}};class xe{get pollAborted(){return this._pollAbort.aborted}constructor(e,t,n){this._httpClient=e,this._logger=t,this._pollAbort=new on,this._options=n,this._running=!1,this.onreceive=null,this.onclose=null}async connect(e,t){if(y.isRequired(e,"url"),y.isRequired(t,"transferFormat"),y.isIn(t,P,"transferFormat"),this._url=e,this._logger.log(a.Trace,"(LongPolling transport) Connecting."),t===P.Binary&&typeof XMLHttpRequest<"u"&&typeof new XMLHttpRequest().responseType!="string")throw new Error("Binary protocols over XmlHttpRequest not implementing advanced features are not supported.");const[n,o]=q(),r={[n]:o,...this._options.headers},i={abortSignal:this._pollAbort.signal,headers:r,timeout:1e5,withCredentials:this._options.withCredentials};t===P.Binary&&(i.responseType="arraybuffer");const c=`${e}&_=${Date.now()}`;this._logger.log(a.Trace,`(LongPolling transport) polling: ${c}.`);const l=await this._httpClient.get(c,i);l.statusCode!==200?(this._logger.log(a.Error,`(LongPolling transport) Unexpected response code: ${l.statusCode}.`),this._closeError=new L(l.statusText||"",l.statusCode),this._running=!1):this._running=!0,this._receiving=this._poll(this._url,i)}async _poll(e,t){try{for(;this._running;)try{const n=`${e}&_=${Date.now()}`;this._logger.log(a.Trace,`(LongPolling transport) polling: ${n}.`);const o=await this._httpClient.get(n,t);o.statusCode===204?(this._logger.log(a.Information,"(LongPolling transport) Poll terminated by server."),this._running=!1):o.statusCode!==200?(this._logger.log(a.Error,`(LongPolling transport) Unexpected response code: ${o.statusCode}.`),this._closeError=new L(o.statusText||"",o.statusCode),this._running=!1):o.content?(this._logger.log(a.Trace,`(LongPolling transport) data received. ${Q(o.content,this._options.logMessageContent)}.`),this.onreceive&&this.onreceive(o.content)):this._logger.log(a.Trace,"(LongPolling transport) Poll timed out, reissuing.")}catch(n){this._running?n instanceof ve?this._logger.log(a.Trace,"(LongPolling transport) Poll timed out, reissuing."):(this._closeError=n,this._running=!1):this._logger.log(a.Trace,`(LongPolling transport) Poll errored after shutdown: ${n.message}`)}}finally{this._logger.log(a.Trace,"(LongPolling transport) Polling complete."),this.pollAborted||this._raiseOnClose()}}async send(e){return this._running?qe(this._logger,"LongPolling",this._httpClient,this._url,e,this._options):Promise.reject(new Error("Cannot send until the transport is connected"))}async stop(){this._logger.log(a.Trace,"(LongPolling transport) Stopping polling."),this._running=!1,this._pollAbort.abort();try{await this._receiving,this._logger.log(a.Trace,`(LongPolling transport) sending DELETE request to ${this._url}.`);const e={},[t,n]=q();e[t]=n;const o={headers:{...e,...this._options.headers},timeout:this._options.timeout,withCredentials:this._options.withCredentials};let r;try{await this._httpClient.delete(this._url,o)}catch(i){r=i}r?r instanceof L&&(r.statusCode===404?this._logger.log(a.Trace,"(LongPolling transport) A 404 response was returned from sending a DELETE request."):this._logger.log(a.Trace,`(LongPolling transport) Error sending a DELETE request: ${r}`)):this._logger.log(a.Trace,"(LongPolling transport) DELETE request accepted.")}finally{this._logger.log(a.Trace,"(LongPolling transport) Stop finished."),this._raiseOnClose()}}_raiseOnClose(){if(this.onclose){let e="(LongPolling transport) Firing onclose event.";this._closeError&&(e+=" Error: "+this._closeError),this._logger.log(a.Trace,e),this.onclose(this._closeError)}}}class sn{constructor(e,t,n,o){this._httpClient=e,this._accessToken=t,this._logger=n,this._options=o,this.onreceive=null,this.onclose=null}async connect(e,t){return y.isRequired(e,"url"),y.isRequired(t,"transferFormat"),y.isIn(t,P,"transferFormat"),this._logger.log(a.Trace,"(SSE transport) Connecting."),this._url=e,this._accessToken&&(e+=(e.indexOf("?")<0?"?":"&")+`access_token=${encodeURIComponent(this._accessToken)}`),new Promise((n,o)=>{let r=!1;if(t!==P.Text){o(new Error("The Server-Sent Events transport only supports the 'Text' transfer format"));return}let i;if(S.isBrowser||S.isWebWorker)i=new this._options.EventSource(e,{withCredentials:this._options.withCredentials});else{const c=this._httpClient.getCookieString(e),l={};l.Cookie=c;const[h,u]=q();l[h]=u,i=new this._options.EventSource(e,{withCredentials:this._options.withCredentials,headers:{...l,...this._options.headers}})}try{i.onmessage=c=>{if(this.onreceive)try{this._logger.log(a.Trace,`(SSE transport) data received. ${Q(c.data,this._options.logMessageContent)}.`),this.onreceive(c.data)}catch(l){this._close(l);return}},i.onerror=c=>{r?this._close():o(new Error("EventSource failed to connect. The connection could not be found on the server, either the connection ID is not present on the server, or a proxy is refusing/buffering the connection. If you have multiple servers check that sticky sessions are enabled."))},i.onopen=()=>{this._logger.log(a.Information,`SSE connected to ${this._url}`),this._eventSource=i,r=!0,n()}}catch(c){o(c);return}})}async send(e){return this._eventSource?qe(this._logger,"SSE",this._httpClient,this._url,e,this._options):Promise.reject(new Error("Cannot send until the transport is connected"))}stop(){return this._close(),Promise.resolve()}_close(e){this._eventSource&&(this._eventSource.close(),this._eventSource=void 0,this.onclose&&this.onclose(e))}}class rn{constructor(e,t,n,o,r,i){this._logger=n,this._accessTokenFactory=t,this._logMessageContent=o,this._webSocketConstructor=r,this._httpClient=e,this.onreceive=null,this.onclose=null,this._headers=i}async connect(e,t){y.isRequired(e,"url"),y.isRequired(t,"transferFormat"),y.isIn(t,P,"transferFormat"),this._logger.log(a.Trace,"(WebSockets transport) Connecting.");let n;return this._accessTokenFactory&&(n=await this._accessTokenFactory()),new Promise((o,r)=>{e=e.replace(/^http/,"ws");let i;const c=this._httpClient.getCookieString(e);let l=!1;if(S.isNode||S.isReactNative){const h={},[u,g]=q();h[u]=g,n&&(h[U.Authorization]=`Bearer ${n}`),c&&(h[U.Cookie]=c),i=new this._webSocketConstructor(e,void 0,{headers:{...h,...this._headers}})}else n&&(e+=(e.indexOf("?")<0?"?":"&")+`access_token=${encodeURIComponent(n)}`);i||(i=new this._webSocketConstructor(e)),t===P.Binary&&(i.binaryType="arraybuffer"),i.onopen=h=>{this._logger.log(a.Information,`WebSocket connected to ${e}.`),this._webSocket=i,l=!0,o()},i.onerror=h=>{let u=null;typeof ErrorEvent<"u"&&h instanceof ErrorEvent?u=h.error:u="There was an error with the transport",this._logger.log(a.Information,`(WebSockets transport) ${u}.`)},i.onmessage=h=>{if(this._logger.log(a.Trace,`(WebSockets transport) data received. ${Q(h.data,this._logMessageContent)}.`),this.onreceive)try{this.onreceive(h.data)}catch(u){this._close(u);return}},i.onclose=h=>{if(l)this._close(h);else{let u=null;typeof ErrorEvent<"u"&&h instanceof ErrorEvent?u=h.error:u="WebSocket failed to connect. The connection could not be found on the server, either the endpoint may not be a SignalR endpoint, the connection ID is not present on the server, or there is a proxy blocking WebSockets. If you have multiple servers check that sticky sessions are enabled.",r(new Error(u))}}})}send(e){return this._webSocket&&this._webSocket.readyState===this._webSocketConstructor.OPEN?(this._logger.log(a.Trace,`(WebSockets transport) sending data. ${Q(e,this._logMessageContent)}.`),this._webSocket.send(e),Promise.resolve()):Promise.reject("WebSocket is not in the OPEN state")}stop(){return this._webSocket&&this._close(void 0),Promise.resolve()}_close(e){this._webSocket&&(this._webSocket.onclose=()=>{},this._webSocket.onmessage=()=>{},this._webSocket.onerror=()=>{},this._webSocket.close(),this._webSocket=void 0),this._logger.log(a.Trace,"(WebSockets transport) socket closed."),this.onclose&&(this._isCloseEvent(e)&&(e.wasClean===!1||e.code!==1e3)?this.onclose(new Error(`WebSocket closed with status code: ${e.code} (${e.reason||"no reason given"}).`)):e instanceof Error?this.onclose(e):this.onclose())}_isCloseEvent(e){return e&&typeof e.wasClean=="boolean"&&typeof e.code=="number"}}const Ae=100;class an{constructor(e,t={}){if(this._stopPromiseResolver=()=>{},this.features={},this._negotiateVersion=1,y.isRequired(e,"url"),this._logger=Bt(t.logger),this.baseUrl=this._resolveUrl(e),t=t||{},t.logMessageContent=t.logMessageContent===void 0?!1:t.logMessageContent,typeof t.withCredentials=="boolean"||t.withCredentials===void 0)t.withCredentials=t.withCredentials===void 0?!0:t.withCredentials;else throw new Error("withCredentials option was not a 'boolean' or 'undefined' value");t.timeout=t.timeout===void 0?100*1e3:t.timeout;let n=null,o=null;if(S.isNode&&typeof require<"u"){const r=typeof __webpack_require__=="function"?__non_webpack_require__:require;n=r("ws"),o=r("eventsource")}!S.isNode&&typeof WebSocket<"u"&&!t.WebSocket?t.WebSocket=WebSocket:S.isNode&&!t.WebSocket&&n&&(t.WebSocket=n),!S.isNode&&typeof EventSource<"u"&&!t.EventSource?t.EventSource=EventSource:S.isNode&&!t.EventSource&&typeof o<"u"&&(t.EventSource=o),this._httpClient=new nn(t.httpClient||new Xt(this._logger),t.accessTokenFactory),this._connectionState="Disconnected",this._connectionStarted=!1,this._options=t,this.onreceive=null,this.onclose=null}async start(e){if(e=e||P.Binary,y.isIn(e,P,"transferFormat"),this._logger.log(a.Debug,`Starting connection with transfer format '${P[e]}'.`),this._connectionState!=="Disconnected")return Promise.reject(new Error("Cannot start an HttpConnection that is not in the 'Disconnected' state."));if(this._connectionState="Connecting",this._startInternalPromise=this._startInternal(e),await this._startInternalPromise,this._connectionState==="Disconnecting"){const t="Failed to start the HttpConnection before stop() was called.";return this._logger.log(a.Error,t),await this._stopPromise,Promise.reject(new N(t))}else if(this._connectionState!=="Connected"){const t="HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!";return this._logger.log(a.Error,t),Promise.reject(new N(t))}this._connectionStarted=!0}send(e){return this._connectionState!=="Connected"?Promise.reject(new Error("Cannot send data if the connection is not in the 'Connected' State.")):(this._sendQueue||(this._sendQueue=new Ce(this.transport)),this._sendQueue.send(e))}async stop(e){if(this._connectionState==="Disconnected")return this._logger.log(a.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnected state.`),Promise.resolve();if(this._connectionState==="Disconnecting")return this._logger.log(a.Debug,`Call to HttpConnection.stop(${e}) ignored because the connection is already in the disconnecting state.`),this._stopPromise;this._connectionState="Disconnecting",this._stopPromise=new Promise(t=>{this._stopPromiseResolver=t}),await this._stopInternal(e),await this._stopPromise}async _stopInternal(e){this._stopError=e;try{await this._startInternalPromise}catch{}if(this.transport){try{await this.transport.stop()}catch(t){this._logger.log(a.Error,`HttpConnection.transport.stop() threw error '${t}'.`),this._stopConnection()}this.transport=void 0}else this._logger.log(a.Debug,"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.")}async _startInternal(e){let t=this.baseUrl;this._accessTokenFactory=this._options.accessTokenFactory,this._httpClient._accessTokenFactory=this._accessTokenFactory;try{if(this._options.skipNegotiation)if(this._options.transport===k.WebSockets)this.transport=this._constructTransport(k.WebSockets),await this._startTransport(t,e);else throw new Error("Negotiation can only be skipped when using the WebSocket transport directly.");else{let n=null,o=0;do{if(n=await this._getNegotiationResponse(t),this._connectionState==="Disconnecting"||this._connectionState==="Disconnected")throw new N("The connection was stopped during negotiation.");if(n.error)throw new Error(n.error);if(n.ProtocolVersion)throw new Error("Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.");if(n.url&&(t=n.url),n.accessToken){const r=n.accessToken;this._accessTokenFactory=()=>r,this._httpClient._accessToken=r,this._httpClient._accessTokenFactory=void 0}o++}while(n.url&&o<Ae);if(o===Ae&&n.url)throw new Error("Negotiate redirection limit exceeded.");await this._createTransport(t,this._options.transport,n,e)}this.transport instanceof xe&&(this.features.inherentKeepAlive=!0),this._connectionState==="Connecting"&&(this._logger.log(a.Debug,"The HttpConnection connected successfully."),this._connectionState="Connected")}catch(n){return this._logger.log(a.Error,"Failed to start the connection: "+n),this._connectionState="Disconnected",this.transport=void 0,this._stopPromiseResolver(),Promise.reject(n)}}async _getNegotiationResponse(e){const t={},[n,o]=q();t[n]=o;const r=this._resolveNegotiateUrl(e);this._logger.log(a.Debug,`Sending negotiation request: ${r}.`);try{const i=await this._httpClient.post(r,{content:"",headers:{...t,...this._options.headers},timeout:this._options.timeout,withCredentials:this._options.withCredentials});if(i.statusCode!==200)return Promise.reject(new Error(`Unexpected status code returned from negotiate '${i.statusCode}'`));const c=JSON.parse(i.content);return(!c.negotiateVersion||c.negotiateVersion<1)&&(c.connectionToken=c.connectionId),c.useStatefulReconnect&&this._options._useStatefulReconnect!==!0?Promise.reject(new Re("Client didn't negotiate Stateful Reconnect but the server did.")):c}catch(i){let c="Failed to complete negotiation with the server: "+i;return i instanceof L&&i.statusCode===404&&(c=c+" Either this is not a SignalR endpoint or there is a proxy blocking the connection."),this._logger.log(a.Error,c),Promise.reject(new Re(c))}}_createConnectUrl(e,t){return t?e+(e.indexOf("?")===-1?"?":"&")+`id=${t}`:e}async _createTransport(e,t,n,o){let r=this._createConnectUrl(e,n.connectionToken);if(this._isITransport(t)){this._logger.log(a.Debug,"Connection was provided an instance of ITransport, using that directly."),this.transport=t,await this._startTransport(r,o),this.connectionId=n.connectionId;return}const i=[],c=n.availableTransports||[];let l=n;for(const h of c){const u=this._resolveTransportOrError(h,t,o,l?.useStatefulReconnect===!0);if(u instanceof Error)i.push(`${h.transport} failed:`),i.push(u);else if(this._isITransport(u)){if(this.transport=u,!l){try{l=await this._getNegotiationResponse(e)}catch(g){return Promise.reject(g)}r=this._createConnectUrl(e,l.connectionToken)}try{await this._startTransport(r,o),this.connectionId=l.connectionId;return}catch(g){if(this._logger.log(a.Error,`Failed to start the transport '${h.transport}': ${g}`),l=void 0,i.push(new Nt(`${h.transport} failed: ${g}`,k[h.transport])),this._connectionState!=="Connecting"){const b="Failed to select transport before stop() was called.";return this._logger.log(a.Debug,b),Promise.reject(new N(b))}}}}return i.length>0?Promise.reject(new Ht(`Unable to connect to the server with any of the available transports. ${i.join(" ")}`,i)):Promise.reject(new Error("None of the transports supported by the client are supported by the server."))}_constructTransport(e){switch(e){case k.WebSockets:if(!this._options.WebSocket)throw new Error("'WebSocket' is not supported in your environment.");return new rn(this._httpClient,this._accessTokenFactory,this._logger,this._options.logMessageContent,this._options.WebSocket,this._options.headers||{});case k.ServerSentEvents:if(!this._options.EventSource)throw new Error("'EventSource' is not supported in your environment.");return new sn(this._httpClient,this._httpClient._accessToken,this._logger,this._options);case k.LongPolling:return new xe(this._httpClient,this._logger,this._options);default:throw new Error(`Unknown transport: ${e}.`)}}_startTransport(e,t){return this.transport.onreceive=this.onreceive,this.features.reconnect?this.transport.onclose=async n=>{let o=!1;if(this.features.reconnect)try{this.features.disconnected(),await this.transport.connect(e,t),await this.features.resend()}catch{o=!0}else{this._stopConnection(n);return}o&&this._stopConnection(n)}:this.transport.onclose=n=>this._stopConnection(n),this.transport.connect(e,t)}_resolveTransportOrError(e,t,n,o){const r=k[e.transport];if(r==null)return this._logger.log(a.Debug,`Skipping transport '${e.transport}' because it is not supported by this client.`),new Error(`Skipping transport '${e.transport}' because it is not supported by this client.`);if(cn(t,r))if(e.transferFormats.map(c=>P[c]).indexOf(n)>=0){if(r===k.WebSockets&&!this._options.WebSocket||r===k.ServerSentEvents&&!this._options.EventSource)return this._logger.log(a.Debug,`Skipping transport '${k[r]}' because it is not supported in your environment.'`),new xt(`'${k[r]}' is not supported in your environment.`,r);this._logger.log(a.Debug,`Selecting transport '${k[r]}'.`);try{return this.features.reconnect=r===k.WebSockets?o:void 0,this._constructTransport(r)}catch(c){return c}}else return this._logger.log(a.Debug,`Skipping transport '${k[r]}' because it does not support the requested transfer format '${P[n]}'.`),new Error(`'${k[r]}' does not support ${P[n]}.`);else return this._logger.log(a.Debug,`Skipping transport '${k[r]}' because it was disabled by the client.`),new At(`'${k[r]}' is disabled by the client.`,r)}_isITransport(e){return e&&typeof e=="object"&&"connect"in e}_stopConnection(e){if(this._logger.log(a.Debug,`HttpConnection.stopConnection(${e}) called while in state ${this._connectionState}.`),this.transport=void 0,e=this._stopError||e,this._stopError=void 0,this._connectionState==="Disconnected"){this._logger.log(a.Debug,`Call to HttpConnection.stopConnection(${e}) was ignored because the connection is already in the disconnected state.`);return}if(this._connectionState==="Connecting")throw this._logger.log(a.Warning,`Call to HttpConnection.stopConnection(${e}) was ignored because the connection is still in the connecting state.`),new Error(`HttpConnection.stopConnection(${e}) was called while the connection is still in the connecting state.`);if(this._connectionState==="Disconnecting"&&this._stopPromiseResolver(),e?this._logger.log(a.Error,`Connection disconnected with error '${e}'.`):this._logger.log(a.Information,"Connection disconnected."),this._sendQueue&&(this._sendQueue.stop().catch(t=>{this._logger.log(a.Error,`TransportSendQueue.stop() threw error '${t}'.`)}),this._sendQueue=void 0),this.connectionId=void 0,this._connectionState="Disconnected",this._connectionStarted){this._connectionStarted=!1;try{this.onclose&&this.onclose(e)}catch(t){this._logger.log(a.Error,`HttpConnection.onclose(${e}) threw error '${t}'.`)}}}_resolveUrl(e){if(e.lastIndexOf("https://",0)===0||e.lastIndexOf("http://",0)===0)return e;if(!S.isBrowser)throw new Error(`Cannot resolve '${e}'.`);const t=window.document.createElement("a");return t.href=e,this._logger.log(a.Information,`Normalizing '${e}' to '${t.href}'.`),t.href}_resolveNegotiateUrl(e){const t=new URL(e);t.pathname.endsWith("/")?t.pathname+="negotiate":t.pathname+="/negotiate";const n=new URLSearchParams(t.searchParams);return n.has("negotiateVersion")||n.append("negotiateVersion",this._negotiateVersion.toString()),n.has("useStatefulReconnect")?n.get("useStatefulReconnect")==="true"&&(this._options._useStatefulReconnect=!0):this._options._useStatefulReconnect===!0&&n.append("useStatefulReconnect","true"),t.search=n.toString(),t.toString()}}function cn(s,e){return!s||(e&s)!==0}class Ce{constructor(e){this._transport=e,this._buffer=[],this._executing=!0,this._sendBufferedData=new te,this._transportResult=new te,this._sendLoopPromise=this._sendLoop()}send(e){return this._bufferData(e),this._transportResult||(this._transportResult=new te),this._transportResult.promise}stop(){return this._executing=!1,this._sendBufferedData.resolve(),this._sendLoopPromise}_bufferData(e){if(this._buffer.length&&typeof this._buffer[0]!=typeof e)throw new Error(`Expected data to be of type ${typeof this._buffer} but was of type ${typeof e}`);this._buffer.push(e),this._sendBufferedData.resolve()}async _sendLoop(){for(;;){if(await this._sendBufferedData.promise,!this._executing){this._transportResult&&this._transportResult.reject("Connection stopped.");break}this._sendBufferedData=new te;const e=this._transportResult;this._transportResult=void 0;const t=typeof this._buffer[0]=="string"?this._buffer.join(""):Ce._concatBuffers(this._buffer);this._buffer.length=0;try{await this._transport.send(t),e.resolve()}catch(n){e.reject(n)}}}static _concatBuffers(e){const t=e.map(r=>r.byteLength).reduce((r,i)=>r+i),n=new Uint8Array(t);let o=0;for(const r of e)n.set(new Uint8Array(r),o),o+=r.byteLength;return n.buffer}}class te{constructor(){this.promise=new Promise((e,t)=>[this._resolver,this._rejecter]=[e,t])}resolve(){this._resolver()}reject(e){this._rejecter(e)}}const ln="json";class hn{constructor(){this.name=ln,this.version=2,this.transferFormat=P.Text}parseMessages(e,t){if(typeof e!="string")throw new Error("Invalid input for JSON hub protocol. Expected a string.");if(!e)return[];t===null&&(t=Y.instance);const n=$.parse(e),o=[];for(const r of n){const i=JSON.parse(r);if(typeof i.type!="number")throw new Error("Invalid payload.");switch(i.type){case f.Invocation:this._isInvocationMessage(i);break;case f.StreamItem:this._isStreamItemMessage(i);break;case f.Completion:this._isCompletionMessage(i);break;case f.Ping:break;case f.Close:break;case f.Ack:this._isAckMessage(i);break;case f.Sequence:this._isSequenceMessage(i);break;default:t.log(a.Information,"Unknown message type '"+i.type+"' ignored.");continue}o.push(i)}return o}writeMessage(e){return $.write(JSON.stringify(e))}_isInvocationMessage(e){this._assertNotEmptyString(e.target,"Invalid payload for Invocation message."),e.invocationId!==void 0&&this._assertNotEmptyString(e.invocationId,"Invalid payload for Invocation message.")}_isStreamItemMessage(e){if(this._assertNotEmptyString(e.invocationId,"Invalid payload for StreamItem message."),e.item===void 0)throw new Error("Invalid payload for StreamItem message.")}_isCompletionMessage(e){if(e.result&&e.error)throw new Error("Invalid payload for Completion message.");!e.result&&e.error&&this._assertNotEmptyString(e.error,"Invalid payload for Completion message."),this._assertNotEmptyString(e.invocationId,"Invalid payload for Completion message.")}_isAckMessage(e){if(typeof e.sequenceId!="number")throw new Error("Invalid SequenceId for Ack message.")}_isSequenceMessage(e){if(typeof e.sequenceId!="number")throw new Error("Invalid SequenceId for Sequence message.")}_assertNotEmptyString(e,t){if(typeof e!="string"||e==="")throw new Error(t)}}const un={trace:a.Trace,debug:a.Debug,info:a.Information,information:a.Information,warn:a.Warning,warning:a.Warning,error:a.Error,critical:a.Critical,none:a.None};function dn(s){const e=un[s.toLowerCase()];if(typeof e<"u")return e;throw new Error(`Unknown log level: ${s}`)}class kn{configureLogging(e){if(y.isRequired(e,"logging"),fn(e))this.logger=e;else if(typeof e=="string"){const t=dn(e);this.logger=new re(t)}else this.logger=new re(e);return this}withUrl(e,t){return y.isRequired(e,"url"),y.isNotEmpty(e,"url"),this.url=e,typeof t=="object"?this.httpConnectionOptions={...this.httpConnectionOptions,...t}:this.httpConnectionOptions={...this.httpConnectionOptions,transport:t},this}withHubProtocol(e){return y.isRequired(e,"protocol"),this.protocol=e,this}withAutomaticReconnect(e){if(this.reconnectPolicy)throw new Error("A reconnectPolicy has already been set.");return e?Array.isArray(e)?this.reconnectPolicy=new $e(e):this.reconnectPolicy=e:this.reconnectPolicy=new $e,this}withServerTimeout(e){return y.isRequired(e,"milliseconds"),this._serverTimeoutInMilliseconds=e,this}withKeepAliveInterval(e){return y.isRequired(e,"milliseconds"),this._keepAliveIntervalInMilliseconds=e,this}withStatefulReconnect(e){return this.httpConnectionOptions===void 0&&(this.httpConnectionOptions={}),this.httpConnectionOptions._useStatefulReconnect=!0,this._statefulReconnectBufferSize=e?.bufferSize,this}build(){const e=this.httpConnectionOptions||{};if(e.logger===void 0&&(e.logger=this.logger),!this.url)throw new Error("The 'HubConnectionBuilder.withUrl' method must be called before building the connection.");const t=new an(this.url,e);return Se.create(t,this.logger||Y.instance,this.protocol||new hn,this.reconnectPolicy,this._serverTimeoutInMilliseconds,this._keepAliveIntervalInMilliseconds,this._statefulReconnectBufferSize)}}function fn(s){return s.log!==void 0}/**
 * @license lucide-svelte v0.546.0 - ISC
 *
 * ISC License
 * 
 * Copyright (c) for portions of Lucide are held by Cole Bemis 2013-2023 as part of Feather (MIT). All other copyright (c) for Lucide are held by Lucide Contributors 2025.
 * 
 * Permission to use, copy, modify, and/or distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 * 
 * ---
 * 
 * The MIT License (MIT) (for portions derived from Feather)
 * 
 * Copyright (c) 2013-2023 Cole Bemis
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 * 
 */const _n={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":2,"stroke-linecap":"round","stroke-linejoin":"round"};var gn=pt("<svg><!><!></svg>");function En(s,e){const t=Pe(e,["children","$$slots","$$events","$$legacy"]),n=Pe(t,["name","color","size","strokeWidth","absoluteStrokeWidth","iconNode"]);gt(e,!1);let o=j(e,"name",8,void 0),r=j(e,"color",8,"currentColor"),i=j(e,"size",8,24),c=j(e,"strokeWidth",8,2),l=j(e,"absoluteStrokeWidth",8,!1),h=j(e,"iconNode",24,()=>[]);const u=(...d)=>d.filter((m,p,C)=>!!m&&C.indexOf(m)===p).join(" ");Et();var g=gn();Te(g,(d,m)=>({..._n,...n,width:i(),height:i(),stroke:r(),"stroke-width":d,class:m}),[()=>(X(l()),X(c()),X(i()),se(()=>l()?Number(c())*24/Number(i()):c())),()=>(X(o()),X(t),se(()=>u("lucide-icon","lucide",o()?`lucide-${o()}`:"",t.class)))]);var b=mt(g);Pt(b,1,h,It,(d,m)=>{var p=yt(()=>kt(J(m),2));let C=()=>J(p)[0],T=()=>J(p)[1];var D=St(),A=Ct(D);$t(A,C,!0,(E,_)=>{Te(E,()=>({...T()}))}),Ie(d,D)});var x=wt(b);Dt(x,e,"default",{}),bt(g),Ie(s,g),vt()}export{kn as H,En as I,$t as a,Sn as b,Cn as c,Pt as e,It as i,Dt as s};
